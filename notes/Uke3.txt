Mandag 13.01.20

# Strings
string.insert(pos,str) --> atd::strings are mutable
convert to string: to_string(int 13)
stod() --> string to double
stoi() --> string to int
stol() --> string to long

cin reads up to the next white_space character! (including whitespace)
cin.ignore() skips the rest of the user input line. 
To solve this: getline(cin, string variable).
string.cpp from cpp-examples --> see this for examples on string conversion methods as mentioned above also. 

# Graphics
graph_1.cpp --> Missing scaling
graph_2.cpp --> Data dependent scaling (improvement) [Finn ut hvorfor y-aksens verdien skaleres som den gjÃ¸r?!]
graph_3.cpp --> Avoids "magic constants"; with const and constexpr

# Declarations and header files
Declarations are often introduced into a program through header files. 
Allows for abstraction!

# Scope
Keep names as local as possible!
Scope operator ::

# Namespace
Use namespace to organize functions, data, types and classes. 

# Functions and parameter passing
Chapter 8 in PPP.  
Pass by value
Pass by (const) reference
Example program bug_1.cpp --> PPP 8.5.2, page 275 (Avoid "fall through")

Tirsdag 14.01.20

param_passing.cpp --> example program for pass by reference. 

Use ampersand in the parameter (behind the data type of the parameter) to use pass by reference. 
Could also pass in a const-reference into the function. 

PPP A.8 for more about datatypes

Lecture 4: 

# Type safety PPP 3.9
type_1.cpp --> Demonstrates VSCODE type-safety violation warnings. Also show safe conversions between types. 
More examples on PPP page 80, chapter 3.9.2. 

# Unnamed objects PPP 13.10
Use new to create unnamed objects and Vector_ref to store these. 

# Vector_ref
Special vector that can hold named and unnamed objects. 
Palette.cpp --> example 

# String and char, input
string_2.cpp --> example: looking for a specific character. 
String operations and functions PPP 23.2
We prefer moderns trings from the standars library! (Not C-strings, but sometimes we must use them)

Character classification functions PPP 11.6

Making reading integers more robust:
int_input.cpp --> example 
PPP 10.6 --> error handling
PPP 10.7 --> clean up the code

# Set<> from STL (Standard Template Library) PPP 21.6
Ordered container of UNIQUE objects of a specific type
    --> the < operator must be defines for the type
.insert() and .erase()

# Input
